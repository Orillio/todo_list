// Mocks generated by Mockito 5.3.0 from annotations
// in todo_list/test/business/remote_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_list/business/api/api.dart' as _i2;
import 'package:todo_list/models/todo_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i2.Api {
  MockApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> getUpToDateRevision() =>
      (super.noSuchMethod(Invocation.method(#getUpToDateRevision, []),
          returnValue: _i3.Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<List<_i4.TodoModel>> getTasksList() => (super.noSuchMethod(
          Invocation.method(#getTasksList, []),
          returnValue: _i3.Future<List<_i4.TodoModel>>.value(<_i4.TodoModel>[]))
      as _i3.Future<List<_i4.TodoModel>>);
  @override
  _i3.Future<dynamic> addItem(_i4.TodoModel? model) =>
      (super.noSuchMethod(Invocation.method(#addItem, [model]),
          returnValue: _i3.Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> updateList(List<_i4.TodoModel>? model) =>
      (super.noSuchMethod(Invocation.method(#updateList, [model]),
          returnValue: _i3.Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> deleteItem(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteItem, [id]),
          returnValue: _i3.Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> updateItem(_i4.TodoModel? model) =>
      (super.noSuchMethod(Invocation.method(#updateItem, [model]),
          returnValue: _i3.Future<dynamic>.value()) as _i3.Future<dynamic>);
}
